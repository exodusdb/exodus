name: CMake

on: [push, pull_request]

env:
  #  Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:

    # Comment out whole of strategy to get latest version automatically
    strategy:
      matrix:
        include:

#          - UBUNTU_VER: "24.04"
#            PG_VER:
##            COMPILER: g++-latest
#            COMPILER: g++
#
#          - UBUNTU_VER: "24.04"
#            PG_VER:
#            COMPILER: clang-latest
#
          - UBUNTU_VER: "22.04"
            PG_VER:
            COMPILER: g++-latest

#          - UBUNTU_VER: "22.04"
#            PG_VER:
#            COMPILER: clang-latest
#
#          - UBUNTU_VER: "20.04"
#            PG_VER:
#            COMPILER: g++-latest
#
#          - UBUNTU_VER: "20.04"
#            PG_VER:
#            COMPILER: clang-latest
#
          #
          #
          # Latest Ubuntu with default Postgres version #
          #
          #- UBUNTU_VER: latest
          #  PG_VER:
          #  COMPILER:
          #
          # Default Postgres versions
          #
          #- UBUNTU_VER: 20.04
          #  PG_VER:
          #  COMPILER:
          #
          #- UBUNTU_VER: 22.04
          #  PG_VER:
          #  COMPILER:
          #
          # Specific Postgres versions
          #
          #- UBUNTU_VER: 20.04
          #  PG_VER: 10
          #
          #- UBUNTU_VER: 20.04
          #  PG_VER: 11
          #
          #- UBUNTU_VER: 20.04
          #  PG_VER: 12
          #
          #- UBUNTU_VER: 20.04
          #  PG_VER: 13
          #
          #- UBUNTU_VER: 20.04
          #  PG_VER: 14
          #
          #- UBUNTU_VER: 20.04
          #  PG_VER: 15
          #
          #- UBUNTU_VER: 20.04
          #  PG_VER: 16
          #
          #- UBUNTU_VER: 22.04
          #  PG_VER: 10
          #
          #- UBUNTU_VER: 22.04
          #  PG_VER: 11
          #
          #- UBUNTU_VER: 22.04
          #  PG_VER: 12
          #
          #- UBUNTU_VER: 22.04
          #  PG_VER: 13
          #
          #- UBUNTU_VER: 22.04
          #  PG_VER: 14
          #
          #- UBUNTU_VER: 22.04
          #  PG_VER: 15
          #
          #- UBUNTU_VER: 22.04
          #  PG_VER: 16

    # https://docs.github.com/en/actions/learn-github-actions/expressions
    #runs-on: ubuntu-${{ matrix.UBUNTU_VER }}
    runs-on: ubuntu-${{ matrix.UBUNTU_VER && matrix.UBUNTU_VER || 'latest' }}
    #if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    if: ${{ github.event_name == 'pull_request' || github.ref == 'refs/heads/dev' }}
    steps:
    - uses: actions/checkout@v4
      with:
        # with pgexodus
        submodules: recursive

    - name: Inspect image
      run: |
        set -ex
        pwd # /home/runner/work/exodusdb/exodusdb
        ls -l
        :
        : Installed postgresql
        :
        apt list --installed postgresql*
        :
        : Available postgresql
        :
        : apt list postgresql-*
        :
        : Remove all postgresql
        :
        : sudo apt purge -y postgresql* # remove unwanted versions of postgresql (14?)
        :
        : sudo ./install.sh ${{ matrix.PG_VER }}
        env

    - name: Get dependencies for build and install
      run: env ./install.sh b "${{ matrix.COMPILER }}" "${{ matrix.PG_VER }}"

    - name: Build and install
      run: ./install.sh B "${{ matrix.COMPILER }}" "${{ matrix.PG_VER }}"

    - name: Get dependencies for database
      run: ./install.sh d "${{ matrix.COMPILER }}" "${{ matrix.PG_VER }}"

    - name: Install database
      run: ./install.sh D "${{ matrix.COMPILER }}" "${{ matrix.PG_VER }}"

    - name: Test
      run: ./install.sh T "${{ matrix.COMPILER }}" "${{ matrix.PG_VER }}"


    - name: Build and install web service
      run: ./install.sh W "${{ matrix.COMPILER }}" "${{ matrix.PG_VER }}"
