#!/bin/bash
set -euxo pipefail

: ====================================================================
: Stop a background service and run it in the foreground for debugging
: ====================================================================
:
: 'Syntax is ./run DBNAME [OPTION...]'
:
: 'Example:  ./run centauro'
:
: 'Example:  ./run centauro_test'
:

	DB_CODE=${1:?DBNAME argument is required.}
	OPTIONS=${2:-}

:
: Caller sets APP_CODE or it defaults to exo
: ==========================================
:
	APP_CODE=${APP_CODE:-exo}

:
: Remove any _test suffix from DB_CODE to get the working host dir
: ================================================================
:
	if [ -z ${SITE_DIR:-} ]; then
		SITE_DIR=${DB_CODE%_test}
	fi

:
: Check Syntax
: ============
:
	if [ -z "$DB_CODE" ]; then
:		'Syntax error. Cannot continue.'
		exit 1
	fi

:
: Flag to break into debugger on all errors iif _test database
: ============================================================
:
	if [ "${DB_CODE: -5}" = "_test" ]; then
		#export EXO_HOME=~
		export EXO_DEBUG=1
	else
		#export EXO_HOME=~/live
		export EXO_DEBUG=
	fi

:
: Always use the test programs in ~/ when running manually
: ========================================================
:
	export EXO_HOME=~
	#export EXO_HOME=~/live
	#if [ "${DB_CODE: -5}" = "_test" ]; then
	#	export EXO_HOME=~
	#	export EXO_DEBUG=1
	#else
	#	export EXO_HOME=~/live
	#	export EXO_DEBUG=
	#fi

:
: Ensure the correct bin is found first in the path
: =================================================
:
: Unfortunately cannot put first since that would mask system programs
: especially old cli compilations might exist in ~/bin and ~/live/bin
: For now just append to the end since always ~/bin
:
#	export PATH="$EXO_HOME/bin:$PATH"
	export PATH="$PATH:$EXO_HOME/bin"

:
: Service code is APP_live@xxxxxxxx or APP_test@xxxxxxxx
: ==========================================================
:
: Where APP defaults to exo
: and xxxxxxxx is the database code WITHOUT any _test suffix
:
	if [ "${DB_CODE: -5}" = "_test" ]; then
		SERVICE_SUFFIX=test
	else
		SERVICE_SUFFIX=live
	fi
:
	FULL_SERVICE_CODE=${APP_CODE}_${SERVICE_SUFFIX}@${DB_CODE%_test}

:
:
: Change to the working directory
: ===============================
:
	cd ~/hosts/$SITE_DIR/work

:
: Stop the background process
: ===========================
:
	RESTART_AFTER=
	if [ "$SERVICE_SUFFIX" = "test" ] && sudo systemctl is-active $FULL_SERVICE_CODE > /dev/null; then
		RESTART_AFTER=yes
		sudo systemctl stop $FULL_SERVICE_CODE
	fi

:
: Indicate the database to use and request debugging
: ==================================================
:
	export EXO_DATA=$DB_CODE

:
: Indicate the database to use for dictionaries
: =============================================
:
: Always the test dictionaries even while running a live database
:
	export EXO_DICT=exodus

:
: Install gdb if necessary
: ========================
:
    which gdb || apt-get install -y gdb

:
: Start the server process under gdb
: ==================================
:
	gdb -ex "set print inferior-events off" -ex run --args serve_${APP_CODE} $DB_CODE $OPTIONS

:
: Check if background service should be restarted
: ===============================================
:
	if [ $RESTART_AFTER ]; then

:
: After debugging is finished, resume the normal background service
: =================================================================
:
		sudo systemctl start $FULL_SERVICE_CODE
	fi

:
: Finished debug of $SITE_DIR - $DB_CODE in $(($SECONDS / 60)) minutes and $(($SECONDS % 60)) seconds
: ====================================================================
