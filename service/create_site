#!/bin/bash
set -euxo pipefail

: =======================================
: Create/update an apache site for exodus
: =======================================
:
: 'Syntax is ./create_site HOSTNAME "[HOST_DIR]" "[DB_CODE]" [SITE_NAME_PREFIX]'
:
: 'Example:  ./create_site exodus'
:
: 'Example:  ./create_site test "" "" t-'
:
	HOST_NAME=${1:?HOSTNAME argument is required.}
	HOST_DIR=${2:-$1}
	DB_CODE=${3:-$1}
	SITE_PREFIX=${4-}

:
: Check Syntax
: ============
:
	if [ -z "$HOST_NAME" -o -z "$HOST_DIR" -o -z "DB_CODE" ]; then
		set +x
		echo 'Syntax is wrong. Cannot continue.'
		exit 1
	fi

:
: Check current directory
: =======================
:
	EXODUS=`pwd`
	test -f $EXODUS/install_www_apt.sh || ( echo Must be run in exodus install dir without path && exit )

:
: If installing into /root/ then allow cd into /root - but no read access of course
: =================================================================================
:
	if [ ${EXODUS:0:6} = /root/ ]; then
		chmod o+x /root
	fi

:
: Install apache and php if not already installed
: ===============================================
:
#	if ! which apachectl || ! which php; then
#		sudo apt install -y apache2 php php-xml
#	fi
	sudo apt install -y apache2 php php-xml
	sudo a2enmod rewrite ssl
#	sudo apachectl restart
	sudo systemctl restart apache2

:
: Configure php.ini - increase limits
: ===================================
:
	PHP_CONF_DIR=`php --ini|grep '/etc/php/[0-9.]*' -o | head -n1`
	PHP_EXODUS_INI=${PHP_CONF_DIR}/apache2/conf.d/00-exodus.ini
:
	sudo ls -l $PHP_CONF_DIR -r
	sudo php --ini
#	sudo find /etc/ -name php.ini | grep 'apache2' || true
	sudo find /etc/ -name php.ini || true
	sudo find /etc/ -name xml.ini || true
:
	if [ ! -e $PHP_EXODUS_INI ]; then
		(
			sudo cat > ${PHP_EXODUS_INI} <<-V0G0N
				[exodus]
				; defaults
				; max_execution_time = 30
				; upload_max_filesize = 2M
				; post_max_size = 8M

				max_execution_time = 606
				upload_max_filesize = 10M
				post_max_size = 10M
			V0G0N
		) || true # ignore failure. TODO fix
	fi

:
: Enable module to add headers
: ============================
:
	sudo a2enmod headers

:
: Enable module for case insensitivity in images folder
: =====================================================
:
	sudo a2enmod speling

:
: Ensure setfacl is installed
: ===========================
:
	which setfacl || sudo apt install -y acl

:
: Create link from hostname dir to host dir if different
: ======================================================
:
	if [ "$HOST_NAME" != "$HOST_DIR" ]; then
		ln -snf ~/hosts/$HOST_DIR ~/hosts/$HOST_NAME
	fi
                             :
: Make site directories like ~/hosts/demo/{work,data,images}
: ==========================================================
:
	SITEDIR=~/hosts/$HOST_DIR
	for SUBHOST_DIR in work data images; do
		mkdir -p $SITEDIR/$SUBHOST_DIR
		chmod a+srw $SITEDIR/$SUBHOST_DIR
	done

:
: Ensure directory permissions on data/$DB_CODE
: ==============================================
:
: KEEP IN SYNC. SIMILAR code in create_site, create_service and generalproxy.cpp
:
    DB_DIR=~/hosts/$HOST_DIR/data/$DB_CODE
    mkdir -p $DB_DIR
    chmod a+srw $DB_DIR
    setfacl -d -m g::rw $DB_DIR

:
: Link to exodus www
: ==================
:
	rm $SITEDIR/www -rf
	ln -snf ~/exodus/service/www/ $SITEDIR/www

:
: Configure Certificates
: ======================
:
: Use letsencrypt hosts.neosys.com cert if available
: --------------------------------------------------
:
	sudo test -f /etc/letsencrypt/live/hosts.neosys.com/fullchain.pem      && sudo ln -snf /etc/letsencrypt/live/hosts.neosys.com/fullchain.pem      /etc/ssl/certs/exodus-cert.pem
	sudo test -f /etc/letsencrypt/live/hosts.neosys.com/privkey.pem   && sudo ln -snf /etc/letsencrypt/live/hosts.neosys.com/privkey.pem   /etc/ssl/private/exodus-key.pem
:
:
: Otherwise use self signed certificates if exodus cert and key not already present
: ---------------------------------------------------------------------------------
:
	sudo test -f /etc/ssl/certs/exodus-cert.pem  || sudo cp /etc/ssl/certs/ssl-cert-snakeoil.pem   /etc/ssl/certs/exodus-cert.pem
	sudo test -f /etc/ssl/private/exodus-key.pem || sudo cp /etc/ssl/private/ssl-cert-snakeoil.key /etc/ssl/private/exodus-key.pem

:
: Create an Apache virtual site
: =============================
:
	APACHE_SITE_CONF=/etc/apache2/sites-available/$HOST_NAME.conf
	FQDN=${SITE_PREFIX}${HOST_NAME}.hosts.neosys.com
	TMPFILE=$(mktemp /tmp/create_site.XXXXXXXXX)
	cat > $TMPFILE<<V0G0N
# generated by ~/exodus/service/create_site
#$HOST_NAME
ServerSignature Off
ServerTokens Prod
<VirtualHost *:443>
	SSLCertificateFile /etc/ssl/certs/exodus-cert.pem
	SSLCertificateKeyFile /etc/ssl/private/exodus-key.pem
	SSLEngine on
	ServerName $FQDN
	DocumentRoot $HOME/hosts/$HOST_DIR/www/
	Alias /data/ $HOME/hosts/$HOST_DIR/data/
	Alias /images/ $HOME/hosts/$HOST_DIR/images/
	#emerg/alert/crit/error/warn/notice/info/debug/trace1/.../trace8
	LogLevel info
	AddDefaultCharset utf-8
	Header set Cache-Control "max-age=300, public"
	<Directory $HOME/hosts/$HOST_DIR/www/>
		Options +FollowSymLinks
		AllowOverride All
		Require all granted
	</Directory>
	<Directory $HOME/hosts/$HOST_DIR/data/>
		Options +FollowSymLinks
		AllowOverride All
		Require all granted
	</Directory>
	<Directory $HOME/hosts/$HOST_DIR/images/>
		#case insensitivity
		CheckSpelling On
		CheckCaseOnly On
		Options +FollowSymLinks
		AllowOverride All
		Require all granted
	</Directory>
</VirtualHost>
V0G0N
	sudo mv $TMPFILE $APACHE_SITE_CONF

:
: Disable exodus sites
: ====================
:
	sudo a2dissite exodus exodus-ssl || true
	sudo apache2ctl configtest
	sudo apache2ctl restart

:
: Enable the apache site and restart apache
: =========================================
:
	sudo a2ensite $HOST_NAME
	sudo apache2ctl configtest
	sudo apache2ctl restart

:
: CREATED https://$FQDN
: ===============================
